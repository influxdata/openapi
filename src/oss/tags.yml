tags:
  - name: Authorizations
    description: |
      Create and manage API tokens.
      An **authorization** associates a list of permissions to an
      **organization** and provides a token for API access.
      Optionally, you can restrict an authorization and its token to a specific user.

      ### Related guides

        - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).
        - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).
        - [Assign a token to a specific user]({{% INFLUXDB_DOCS_URL %}}/security/tokens/create-token/).
  - name: Buckets
    description: |
      Store your data in InfluxDB [buckets]({{% INFLUXDB_DOCS_URL %}}/cloud/reference/glossary/#bucket).
      A bucket is a named location where time series data is stored. All buckets
      have a [retention period]({{% INFLUXDB_DOCS_URL %/cloud/reference/glossary/#retention-period}}),
      a duration of time that each data point persists. InfluxDB drops all 
      points with timestamps older than the bucketâ€™s retention period. 
      A bucket belongs to an organization.
      
      ### Related guides
      
        - [Manage buckets]({{% INFLUXDB_DOCS_URL %}}/cloud/organizations/buckets/)
  - name: Debug
    description: |
      Generate profiling and trace reports.

      Use routes under `/debug/pprof` to analyze the Go runtime of InfluxDB.
      These endpoints generate [Go runtime profiles](https://pkg.go.dev/runtime/pprof)
      and **trace** reports.
      **Profiles** are collections of stack traces that show call sequences
      leading to instances of a particular event, such as allocation.

      For more information about **pprof profile** and **trace** reports,
      see the following resources:
        - [Google pprof tool](https://github.com/google/pprof)
        - [Golang diagnostics](https://go.dev/doc/diagnostics)
  - name: Delete
    description: |
      Delete data from an InfluxDB bucket.
  - name: Query
    description: |
      Retrieve data, analyze queries, and get query suggestions.
  - name: Tasks
    description: |
      Process and analyze your data with tasks in the InfluxDB task engine.
      With tasks, you can schedule Flux scripts to query, analyze, modify, and act on data.

      Use the `/api/v2/tasks` endpoints to create and manage tasks, retry task runs, and retrieve run logs.

      #### Related guides

      - [Common data processing tasks]({{% INFLUXDB_DOCS_URL %}}/process-data/common-tasks/)
  - name: Write
    description: |
      Write time series data to buckets.

  # Define x-traitTags below to describe general API features (auth, pagination, headers).
  - name: Authentication
    description: |
      Use one of the following schemes to authenticate to the InfluxDB API:

      - [Token authentication](#section/Authentication/TokenAuthentication)
      - [Basic authentication](#section/Authentication/BasicAuthentication)
      - [Querystring authentication](#section/Authentication/QuerystringAuthentication)
      <!-- ReDoc-Inject: <security-definitions> -->
    x-traitTag: true
  - name: Quick start
    x-traitTag: true
    description: |
      See the [**API Quick Start**]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/)
      to get up and running authenticating with tokens, writing to buckets, and querying data.

      [**InfluxDB API client libraries**]({{% INFLUXDB_DOCS_URL %}}/api-guide/client-libraries/)
      are available for popular languages and ready to import into your application.
  - name: Common parameters
    x-traitTag: true
    description: |
      Many InfluxDB API endpoints require parameters to specify resources--for example,
      writing to a **bucket** in an **organization**.

      ### Common query parameters

      | Query parameter          | Value type            | Description                                |
      |:------------------------ |:--------------------- |:-------------------------------------------|
      | `bucket`                 | string                | The bucket name or ID ([find your bucket]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/view-buckets/). |
      | `bucketID`               | string                | The bucket ID ([find your bucket]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/view-buckets/). |
      | `org`                    | string                | The organization name or ID ([find your organization]({{% INFLUXDB_DOCS_URL %}}/organizations/view-orgs/). |
      | `orgID`                  | 16-byte string        | The organization ID ([find your organization]({{% INFLUXDB_DOCS_URL %}}/organizations/view-orgs/). |
  - name: Headers
    x-traitTag: true
    description: |
      InfluxDB API endpoints use standard HTTP request and response headers.

      **Note**: Not all operations support all headers.

      ### Request headers

      | Header                   | Value type            | Description                                |
      |:------------------------ |:--------------------- |:-------------------------------------------|
      | `Accept`                 | string                | The content type that the client can understand. |
      | `Authorization`          | string                | The authorization scheme and credential. |
      | `Content-Encoding`       | string                | The compression applied to the line protocol in the request payload. |
      | `Content-Length`         | integer               | The size of the entity-body, in bytes, sent to the database. |
      | `Content-Type`           | string                | The format of the data in the request body. |
  - name: Response codes
    x-traitTag: true
    description: |
      InfluxDB API endpoints use standard HTTP status codes for success and failure responses.
      The response body may include additional details.
      For details about a specific operation's response,
      see **Responses** and **Response Samples** for that operation.

      API operations may return the following HTTP status codes:

      | &nbsp;Code&nbsp; | Status                   | Description      |
      |:-----------:|:------------------------ |:--------------------- |
      | `200`       | Success                  |                       |
      | `204`       | No content               | For a `POST` request, `204` indicates that InfluxDB accepted the request and request data is valid. Asynchronous operations, such as `write`, might not have completed yet. |
      | `400`       | Bad request              | May indicate one of the following: <li>Line protocol is malformed. The response body contains the first malformed line in the data and indicates what was expected. For partial writes, the number of points written and the number of points rejected are also included. For more information, check the `rejected_points` measurement in your `_monitoring` bucket.</li><li>`Authorization` header is missing or malformed or the API token does not have permission for the operation.</li> |
      | `401`       | Unauthorized             | May indicate one of the following: <li>`Authorization: Token` header is missing or malformed</li><li>API token value is missing from the header</li><li>API token does not have permission. For more information about token types and permissions, see [Manage API tokens](https://docs.influxdata.com/influxdb/latest/security/tokens/)</li> |
      | `404`       | Not found                | Requested resource was not found. `message` in the response body provides details about the requested resource. |
      | `413`       | Request entity too large | Request payload exceeds the size limit. |
      | `422`       | Unprocessable entity     | Request data is invalid. `code` and `message` in the response body provide details about the problem. |
      | `429`       | Too many requests        | API token is temporarily over the request quota. The `Retry-After` header describes when to try the request again. |
      | `500`       | Internal server error    |                       |
      | `503`       | Service unavailable      | Server is temporarily unavailable to process the request. The `Retry-After` header describes when to try the request again. |
