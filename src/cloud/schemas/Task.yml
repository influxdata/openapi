  type: object
  properties:
    id:
      readOnly: true
      type: string
    orgID:
      description: The ID of the organization that owns the task.
      type: string
    org:
      description: The name of the organization that owns the task.
      type: string
    name:
      description: The name of the task.
      type: string
    ownerID:
      description: The ID of the user who owns the task.
      type: string
    description:
      description: The description of the task.
      type: string
    status:
      $ref: "../../common/schemas/TaskStatusType.yml"
    labels:
      $ref: "../../common/schemas/Labels.yml"
    authorizationID:
      description: The ID of the authorization used when the task communicates with the query engine.
      type: string
    flux:
      description: |
        The Flux script that the task runs.

        #### Limitations

        - If you use the `flux` property, you can't use the `scriptID` and `scriptParameters` properties.
      type: string
    every:
      description: >-
        The interval ([duration literal](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals))) at which the task runs.
        `every` also determines when the task first runs, depending on the specified time.
      type: string
      format: duration
    cron:
      description: >-
        A [Cron expression](https://en.wikipedia.org/wiki/Cron#Overview) that defines the schedule on which the task runs.
        InfluxDB bases cron runs on the system time.
      type: string
    offset:
      description: >-
        A [duration](https://docs.influxdata.com/flux/v0.x/spec/lexical-elements/#duration-literals) to delay execution of the task after the scheduled time has elapsed.
        `0` removes the offset.
      type: string
      format: duration
    latestCompleted:
      description: >-
        A timestamp ([RFC3339 date/time format](https://docs.influxdata.com/flux/v0.x/data-types/basic/time/#time-syntax)) of the latest scheduled and completed run.
      type: string
      format: date-time
      readOnly: true
    lastRunStatus:
      readOnly: true
      type: string
      enum:
        - failed
        - success
        - canceled
    lastRunError:
      readOnly: true
      type: string
    createdAt:
      type: string
      format: date-time
      readOnly: true
    updatedAt:
      type: string
      format: date-time
      readOnly: true
    links:
      type: object
      readOnly: true
      example:
        self: "/api/v2/tasks/1"
        owners: "/api/v2/tasks/1/owners"
        members: "/api/v2/tasks/1/members"
        labels: "/api/v2/tasks/1/labels"
        runs: "/api/v2/tasks/1/runs"
        logs: "/api/v2/tasks/1/logs"
      properties:
        self:
          $ref: "../../common/schemas/Link.yml"
        owners:
          $ref: "../../common/schemas/Link.yml"
        members:
          $ref: "../../common/schemas/Link.yml"
        runs:
          $ref: "../../common/schemas/Link.yml"
        logs:
          $ref: "../../common/schemas/Link.yml"
        labels:
          $ref: "../../common/schemas/Link.yml"
    scriptID:
      description: |
        The ID of the script that the task runs.

        #### Limitations

        - If you use the `scriptID` property, you can't use the `flux` property.
      type: string
    scriptParameters:
      description: |
        The invocation parameters used by the script (referenced with `scriptID`) during the task run.

        #### Limitations

        - `scriptParameters` requires `scriptID`.
        - If you use the `scriptID` and `scriptParameters` properties, you can't use the `flux` property.
      type: object

  required: [id, name, orgID]
