get:
  operationId: GetTasksID
  tags:
    - Data I/O endpoints
    - Tasks
  summary: Retrieve a task
  description: |
    Retrieves a [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task).
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - in: path
      name: taskID
      schema:
        type: string
      required: true
      description: |
        A [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) ID.
        Specifies the task to retrieve.
  responses:
    "200":
      description: Success. The response body contains the task.
      content:
        application/json:
          schema:
            $ref: "../schemas/Task.yml"
    "400":
      $ref: "../../common/responses/BadRequestError.yml"
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    "404":
      $ref: "../../common/responses/ResourceNotFoundError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
    default:
      $ref: "../../common/responses/ServerError.yml"
patch:
  operationId: PatchTasksID
  tags:
    - Tasks
  summary: Update a task
  description: |
    Updates a [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task),
    and then cancels all scheduled runs of the task.

    Use this endpoint to set, modify, or clear task properties--for example: `cron`, `name`, `flux`, `status`.
    Once InfluxDB applies the update, it cancels all previously scheduled runs of the task.

    To update a task, pass an object that contains the updated key-value pairs.
    To activate or inactivate a task, set the `status` property.
    _`"status": "inactive"`_ cancels scheduled runs and prevents manual runs of the task.

    #### InfluxDB Cloud

    - Use either `flux` or `scriptID` to provide the task script.

      - `flux`: a string of "raw" Flux that contains task options and the script--for example:

        ```json
        {
          "flux": "option task = {name: \"CPU Total 1 Hour New\", every: 1h}\
          from(bucket: \"telegraf\")
            |> range(start: -1h)
            |> filter(fn: (r) => (r._measurement == \"cpu\"))
            |> filter(fn: (r) =>\n\t\t(r._field == \"usage_system\"))
            |> filter(fn: (r) => (r.cpu == \"cpu-total\"))
            |> aggregateWindow(every: 1h, fn: max)
            |> to(bucket: \"cpu_usage_user_total_1h\", org: \"INFLUX_ORG\")",
          "status": "active",
          "description": "This task downsamples CPU data every hour"
        }
        ```

      - `scriptID`: the ID of an [invokable script](#tag/Invokable-Scripts)
        for the task to run.
        To pass task options when using `scriptID`, pass the options as
        properties in the request body--for example:

        ```json
        {
          "name": "CPU Total 1 Hour New",
          "description": "This task downsamples CPU data every hour",
          "every": "1h",
          "scriptID": "SCRIPT_ID",
          "scriptParameters":
            {
              "rangeStart": "-1h",
              "bucket": "telegraf",
              "filterField": "cpu-total"
            }
          }
        ```

    #### Limitations:

    - You can't use `flux` and `scriptID` for the same task.
  requestBody:
    description: An task update to apply.
    required: true
    content:
      application/json:
        schema:
          $ref: "../schemas/TaskUpdateRequest.yml"
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - in: path
      name: taskID
      schema:
        type: string
      required: true
      description: |
        A [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) ID.
        Specifies the task to update.
  responses:
    "200":
      description: Success. The response body contains the updated task.
      content:
        application/json:
          schema:
            $ref: "../schemas/Task.yml"
    "400":
      $ref: "../../common/responses/BadRequestError.yml"
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    "404":
      $ref: "../../common/responses/ResourceNotFoundError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
    default:
      $ref: "../../common/responses/ServerError.yml"
delete:
  operationId: DeleteTasksID
  tags:
    - Tasks
  summary: Delete a task
  description: |
    Deletes a [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) and associated records.

    Use this endpoint to delete a task and all associated records (task runs, logs, and labels).
    Once the task is deleted, InfluxDB cancels all scheduled runs of the task.

    If you want to disable a task instead of delete it, [update the task status to `inactive`](#operation/PatchTasksID).
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - in: path
      name: taskID
      schema:
        type: string
      required: true
      description: A [task]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#task) ID. Specifies the task to delete.
  responses:
    "204":
      description: Success. The task and task runs are deleted. Scheduled runs are canceled.
    "400":
      $ref: "../../common/responses/BadRequestError.yml"
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    "404":
      $ref: "../../common/responses/ResourceNotFoundError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
    default:
      $ref: "../../common/responses/ServerError.yml"
