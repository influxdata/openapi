summary: Bucket schemas
get:
  summary: List measurement schemas of a bucket
  description: |
    Retrieves a list of explicitly defined measurement
    [schemas]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#schema) for a bucket.

    #### Related guides

    - [Using bucket schemas](https://www.influxdata.com/blog/new-bucket-schema-option-protect-from-unwanted-schema-changes/)

  operationId: getMeasurementSchemas
  parameters:
    - in: query
      name: org
      description: |
        An organization name.
        Only returns schemas owned by the specified organization.
      schema:
        type: string
    - in: query
      name: orgID
      description: |
        An organization ID.
        Only returns schemas owned by the specified organization.
      schema:
        type: string
    - in: query
      name: name
      description: |
        A measurement name.
        Only returns measurement schemas with the specified name.
      schema:
        type: string
    - in: path
      name: bucketID
      description: |
        A bucket ID.
        Lists measurement schemas for the specified bucket.
      schema:
        type: string
      required: true
  tags:
    - Bucket Schemas
  responses:
    '200':
      description: A list of measurement schemas returning summary information.
      headers:
        ETag:
          description: The current version of the bucket schema
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "../schemas/MeasurementSchemaList.yml"
    '400':
      description: |
        Bad request.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/Error.yml"
          examples:
            invalidSchemaType:
              summary: Invalid schema type.
              value: {
                "code": "invalid",
                "message": "bucket schemaType must be explicit"
              }
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    '404':
      $ref: "../../common/responses/ResourceNotFoundError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
post:
  summary: Create a measurement schema for a bucket
  description: |
    Creates an explict measurement [schema]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#schema)
    for a bucket.

    Schemas are used to define data and prevent invalid data from being written
    to a bucket.

    #### Limitations

    - Buckets must be created with an "explict" `schemaType` in order to use
    schemas.

    #### Related guides

    - [Manage bucket schemas]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/bucket-schema/).
    - [Create a bucket with an explicit schema]({% INFLUXDB_DOCS_URL %}}/organizations/buckets/create-bucket/#create-a-bucket-with-an-explicit-schema)
  operationId: createMeasurementSchema
  parameters:
    - in: query
      name: org
      description: |
        An organization name.
        Only returns schemas owned by the specified organization.
      schema:
        type: string
    - in: query
      name: orgID
      description: |
        An organization ID.
        Only returns schemas owned by the specified organization.
      schema:
        type: string
    - in: path
      name: bucketID
      description: |
        A bucket ID.
        Adds a schema for the specified bucket.
      schema:
        type: string
      required: true
  tags:
    - Bucket Schemas
  requestBody:
    content:
      application/json:
        schema:
          $ref: "../schemas/MeasurementSchemaCreateRequest.yml"
  responses:
    '201':
      description: |
        Success.
        The response body contains the measurement schema.
      headers:
        ETag:
          description: The current version of the measurement schema
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: "../schemas/MeasurementSchema.yml"
    '400':
      description: |
        Bad request.
      content:
        application/json:
          examples:
            badNameExample:
              summary: Invalid name
              description: >-
                The error returned when the name is invalid,
                such as too few or too many characters or the
                name contains non-printable ASCII or is not valid
                UTF-8.
              value:
                code: invalid
                message: name is invalid
            missingColumnsExample:
              summary: Missing columns
              description: >-
                The error returned when the request body
                is missing the columns property.
              value:
                code: invalid
                message: columns is required
            missingTimestampExample:
              summary: Missing timestamp
              description: >-
                The error returned when the request body
                is missing a timestamp type column.
              value:
                code: invalid
                message: Timestamp column is required
            duplicateColumnNamesExample:
              summary: Duplicate column names
              description: >-
                The error returned when the request body
                contains duplicate column names.
              value:
                code: invalid
                message: Duplicate column names
            missingFieldExample:
              summary: Missing field
              description: >-
                The error returned when the request body
                is missing at least one field type column.
              value:
                code: invalid
                message: At least one field column is required
          schema:
            $ref: "../../common/schemas/Error.yml"
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    '404':
      $ref: "../../common/responses/ResourceNotFoundError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
  x-codeSamples:
    - lang: Shell
      label: cURL
      source: |
        curl --request POST "https://cloud2.influxdata.com/api/v2/buckets/BUCKET_ID/schema/measurements \
          --header "Authorization: Token INFLUX_API_TOKEN" \
          --header "Accept: application/json" \
          --header "Content-Type: application/json" \
          --data '{
              "name": "temperature",
              "column": [
                {
                  "type": "tag",
                  "name": "location"
                },
                {
                  "type": "field",
                  "name": "value",
                  "dataType": "float"
                },
                {
                  "type": "timestamp",
                  "name": "time"
                }
              ]
            }'
