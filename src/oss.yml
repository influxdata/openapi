openapi: "3.0.0"
info:
  title: InfluxDB OSS API Service
  version: 2.0.0
  description: |
    The InfluxDB v2 API provides a programmatic interface for all interactions with InfluxDB. Access the InfluxDB API using the `/api/v2/` endpoint.
servers:
  - url: /api/v2
#REF_OSS_TAGS
#REF_OSS_TAG_GROUPS
paths:
#REF_COMMON_PATHS
  /debug/pprof/all:
    $ref: "./oss/paths/debug_pprof_all.yml"
  /debug/pprof/allocs:
    $ref: "./oss/paths/debug_pprof_allocs.yml"
  /debug/pprof/block:
    $ref: "./oss/paths/debug_pprof_block.yml"
  /debug/pprof/cmdline:
    $ref: "./oss/paths/debug_pprof_cmdline.yml"
  /debug/pprof/goroutine:
    $ref: "./oss/paths/debug_pprof_goroutine.yml"
  /debug/pprof/heap:
    $ref: "./oss/paths/debug_pprof_heap.yml"
  /debug/pprof/mutex:
    $ref: "./oss/paths/debug_pprof_mutex.yml"
  /debug/pprof/profile:
    $ref: "./oss/paths/debug_pprof_profile.yml"
  /debug/pprof/threadcreate:
    $ref: "./oss/paths/debug_pprof_threadcreate.yml"
  /debug/pprof/trace:
    $ref: "./oss/paths/debug_pprof_trace.yml"
  /health:
    $ref: "./oss/paths/health.yml"
  /metrics:
    $ref: "./oss/paths/metrics.yml"
  /ready:
    $ref: "./oss/paths/ready.yml"
  /users:
    $ref: "./common/paths/users.yml"
  "/users/{userID}":
    $ref: "./common/paths/users_userID.yml"
  /setup:
    $ref: "./common/paths/setup.yml"
  /authorizations:
    $ref: "./common/paths/authorizations.yml"
  /authorizations/{authID}:
    $ref: "./common/paths/authorizations_authID.yml"
  /variables:
    $ref: "./common/paths/variables.yml"
  "/variables/{variableID}":
    $ref: "./common/paths/variables_variableID.yml"
  /sources:
    $ref: "./common/paths/sources.yml"
  /sources/{sourceID}:
    $ref: "./common/paths/sources_sourceID.yml"
  /sources/{sourceID}/health:
    $ref: "./common/paths/sources_sourceID_health.yml"
  /sources/{sourceID}/buckets:
    $ref: "./common/paths/sources_sourceID_buckets.yml"
  /scrapers:
    $ref: "./common/paths/scrapers.yml"
  "/scrapers/{scraperTargetID}":
    $ref: "./common/paths/scrapers_scraperTargetID.yml"
  "/scrapers/{scraperTargetID}/labels":
    $ref: "./common/paths/scrapers_scraperTargetID_labels.yml"
  "/scrapers/{scraperTargetID}/labels/{labelID}":
    $ref: "./common/paths/scrapers_scraperTargetID_labels_labelID.yml"
  "/scrapers/{scraperTargetID}/members":
    $ref: "./common/paths/scrapers_scraperTargetID_members.yml"
  "/scrapers/{scraperTargetID}/members/{userID}":
    $ref: "./common/paths/scrapers_scraperTargetID_members_userID.yml"
  "/scrapers/{scraperTargetID}/owners":
    $ref: "./common/paths/scrapers_scraperTargetID_owners.yml"
  "/scrapers/{scraperTargetID}/owners/{userID}":
    $ref: "./common/paths/scrapers_scraperTargetID_owners_userID.yml"
  "/backup/kv":
    $ref: "./oss/paths/backup_kv.yml"
  "/backup/metadata":
    $ref: "./oss/paths/backup_metadata.yml"
  "/backup/shards/{shardID}":
    $ref: "./oss/paths/backup_shards_shardID.yml"
  "/restore/kv":
    $ref: "./oss/paths/restore_kv.yml"
  "/restore/sql":
    $ref: "./oss/paths/restore_sql.yml"
  "/restore/bucket/{bucketID}":
    $ref: "./oss/paths/restore_bucket_bucketID.yml"
  "/restore/bucketMetadata":
    $ref: "./oss/paths/restore_bucketMetadata.yml"
  "/restore/shards/{shardID}":
    $ref: "./oss/paths/restore_shards_shardID.yml"
  "/config":
    $ref: "./oss/paths/config.yml"
  /remotes:
    $ref: "./oss/paths/remotes.yml"
  /remotes/{remoteID}:
    $ref: "./oss/paths/remotes_remoteID.yml"
  /replications:
    $ref: "./oss/paths/replications.yml"
  /replications/{replicationID}:
    $ref: "./oss/paths/replications_replicationID.yml"
  /replications/{replicationID}/validate:
    $ref: "./oss/paths/replications_replicationID_validate.yml"
  /dashboards:
    $ref: "./common/paths/dashboards.yml"
  /tasks:
    $ref: "./common/paths/tasks.yml"
components:
  parameters:
  #REF_COMMON_PARAMETERS
  schemas:
  #REF_COMMON_SCHEMAS
    Authorization:
      $ref: "./common/schemas/Authorization.yml"
    AuthorizationPostRequest:
      $ref: "./common/schemas/AuthorizationPostRequest.yml"
    Permission:
      $ref: "./common/schemas/Permission.yml"
    Resource:
      $ref: "./common/schemas/Resource.yml"
    User:
      $ref: "./common/schemas/User.yml"
    Users:
      $ref: "./common/schemas/Users.yml"
    OnboardingRequest:
      $ref: "./common/schemas/OnboardingRequest.yml"
    OnboardingResponse:
      $ref: "./common/schemas/OnboardingResponse.yml"
    Variable:
      $ref: "./common/schemas/Variable.yml"
    Variables:
      $ref: "./common/schemas/Variables.yml"
    Source:
      $ref: "./common/schemas/Source.yml"
    Sources:
      $ref: "./common/schemas/Sources.yml"
    ScraperTargetRequest:
      $ref: "./common/schemas/ScraperTargetRequest.yml"
    ScraperTargetResponse:
      $ref: "./common/schemas/ScraperTargetResponse.yml"
    ScraperTargetResponses:
      $ref: "./common/schemas/ScraperTargetResponses.yml"
    MetadataBackup:
      $ref: "./oss/schemas/MetadataBackup.yml"
    BucketMetadataManifests:
      $ref: "./oss/schemas/BucketMetadataManifests.yml"
    BucketMetadataManifest:
      $ref: "./oss/schemas/BucketMetadataManifest.yml"
    RetentionPolicyManifests:
      $ref: "./oss/schemas/RetentionPolicyManifests.yml"
    RetentionPolicyManifest:
      $ref: "./oss/schemas/RetentionPolicyManifest.yml"
    ShardGroupManifests:
      $ref: "./oss/schemas/ShardGroupManifests.yml"
    ShardGroupManifest:
      $ref: "./oss/schemas/ShardGroupManifest.yml"
    ShardManifests:
      $ref: "./oss/schemas/ShardManifests.yml"
    ShardManifest:
      $ref: "./oss/schemas/ShardManifest.yml"
    ShardOwners:
      $ref: "./oss/schemas/ShardOwners.yml"
    ShardOwner:
      $ref: "./oss/schemas/ShardOwner.yml"
    SubscriptionManifests:
      $ref: "./oss/schemas/SubscriptionManifests.yml"
    SubscriptionManifest:
      $ref: "./oss/schemas/SubscriptionManifest.yml"
    RestoredBucketMappings:
      $ref: "./oss/schemas/RestoredBucketMappings.yml"
    BucketShardMappings:
      $ref: "./oss/schemas/BucketShardMappings.yml"
    BucketShardMapping:
      $ref: "./oss/schemas/BucketShardMapping.yml"
    Config:
      $ref: "./oss/schemas/Config.yml"
    RemoteConnection:
      $ref: "./oss/schemas/RemoteConnection.yml"
    RemoteConnections:
      $ref: "./oss/schemas/RemoteConnections.yml"
    RemoteConnectionCreationRequest:
      $ref: "./oss/schemas/RemoteConnectionCreationRequest.yml"
    RemoteConnectionUpdateRequest:
      $ref: "./oss/schemas/RemoteConnectionUpdateRequest.yml"
    Replication:
      $ref: "./oss/schemas/Replication.yml"
    Replications:
      $ref: "./oss/schemas/Replications.yml"
    ReplicationCreationRequest:
      $ref: "./oss/schemas/ReplicationCreationRequest.yml"
    ReplicationUpdateRequest:
      $ref: "./oss/schemas/ReplicationUpdateRequest.yml"
  responses:
    #REF_COMMON_RESPONSES
  securitySchemes:
    # TODO: Uncomment when Bearer auth is also available in Cloud:
    # BearerAuthentication:
    #   type: http
    #   scheme: "bearer"
    #   description: |
    #     Use the [Bearer authentication](#section/Authentication/BearerAuthentication)
    #     scheme to authenticate to the InfluxDB API.
    #
    #
    #     In your API requests, send an `Authorization` header.
    #     For the header value, provide the word `Bearer` followed by a space and an InfluxDB API token.
    #
    #
    #     ### Syntax
    #
    #     `Authorization: Bearer YOUR_INFLUX_TOKEN`
    #
    #
    #     For more information and examples, see the following:
    #       - [`/authorizations`](#tag/Authorizations) endpoint.
    #       - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).
    #       - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).
    TokenAuthentication:
      type: apiKey
      name: Authorization
      in: header
      description: |
        Use the [Token authentication](#section/Authentication/TokenAuthentication)
        scheme to authenticate to the InfluxDB API.


        In your API requests, send an `Authorization` header.
        For the header value, provide the word `Token` followed by a space and an InfluxDB API token.
        The word `Token` is case-sensitive.


        ### Syntax

        `Authorization: Token YOUR_INFLUX_TOKEN`


        For more information and examples, see the following:
          - [`/authorizations`](#tag/Authorizations) endpoint.
          - [Authorize API requests]({{% INFLUXDB_DOCS_URL %}}/api-guide/api_intro/#authentication).
          - [Manage API tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/).
    BasicAuthentication:
      type: http
      scheme: basic
      description: |
        Use the HTTP Basic authentication scheme for InfluxDB `/api/v2` API operations that support it.

        Username and password schemes require the following credentials:
          - **username**
          - **password**

security:
  - TokenAuthentication: []
  # TODO: Uncomment when Bearer auth is also available in Cloud:
  # - BearerAuthentication: []
