get:
  operationId: GetLegacyAuthorizations
  tags:
    - Legacy Authorizations
  summary: List all legacy authorizations
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - in: query
      name: userID
      schema:
        type: string
      description: |
        A user ID.
        Only returns legacy authorizations scoped to this user.
    - in: query
      name: user
      schema:
        type: string
      description: |
        A user name.
        Only returns legacy authorizations scoped to this user.
    - in: query
      name: orgID
      schema:
        type: string
      description: |
        An organization ID.
        Only returns legacy authorizations that belong to this organization.
    - in: query
      name: org
      schema:
        type: string
      description: |
        An organization name.
        Only returns legacy authorizations that belong to this organization.
    - in: query
      name: token
      schema:
        type: string
      description: |
        An authorization name token.
        Only returns legacy authorizations with this token (name).
    - in: query
      name: authID
      schema:
        type: string
      description: |
        An authorization ID.
        Only returns the legacy authorization with this ID.
  responses:
    "200":
      description: Success. The response body contains a list of legacy `authorizations`.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/Authorizations.yml"
    default:
      description: Unexpected error
      $ref: "../../common/responses/ServerError.yml"
post:
  operationId: PostLegacyAuthorizations
  tags:
    - Legacy Authorizations
  summary: Create a legacy authorization
  description: |
    Creates a legacy authorization and returns the newly created authorization.

    #### Required permissions

    - `write-users USER_ID` if you pass the `userID` property in the request body.

    `USER_ID` is the ID of the user that you want to scope the authorization to.
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
  requestBody:
    description: The legacy authorization to create.
    required: true
    content:
      application/json:
        schema:
          $ref: "../../legacy/schemas/LegacyAuthorizationPostRequest.yml"
  responses:
    "201":
      description: |
        Created. The legacy authorization is created.
        The response body contains the newly created legacy authorization.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/Authorization.yml"
    "400":
      description: Invalid request
      $ref: "../../common/responses/ServerError.yml"
    "401":
      description: |
        Unauthorized.
        The API token passed doesn't have the permissions necessary for the
        request.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/UnauthorizedRequestError.yml"
          examples:
            unauthorizedWriteUsers:
              summary: The token doesn't have the write:user permission
              value:
                {
                  "code": "unauthorized",
                  "message": "write:users/08028e90933bf000 is unauthorized"
                }
    default:
      description: Unexpected error
      $ref: "../../common/responses/ServerError.yml"
