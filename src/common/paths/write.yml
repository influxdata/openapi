post:
  operationId: PostWrite
  tags:
    - Write
  summary: Write data
  description: |
    Writes data to a bucket.

    To write data into InfluxDB, you need the following:

    - **organization name or ID** – _See [View organizations]({{% INFLUXDB_DOCS_URL %}}/organizations/view-orgs/#view-your-organization-id) for instructions on viewing your organization ID._
    - **bucket** – _See [View buckets]({{% INFLUXDB_DOCS_URL %}}/organizations/buckets/view-buckets/) for
     instructions on viewing your bucket ID._
    - **API token** – _See [View tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/view-tokens/)
     for instructions on viewing your API token._
    - **InfluxDB URL** – _See [InfluxDB URLs]({{% INFLUXDB_DOCS_URL %}}/reference/urls/)_.
    - data in [line protocol]({{% INFLUXDB_DOCS_URL %}}/reference/syntax/line-protocol) format.

    InfluxDB Cloud enforces rate and size limits different from InfluxDB OSS. For details, see Responses.

    For more information and examples, see the following:
    - [Write data with the InfluxDB API]({{% INFLUXDB_DOCS_URL %}}/write-data/developer-tools/api).
    - [Optimize writes to InfluxDB]({{% INFLUXDB_DOCS_URL %}}/write-data/best-practices/optimize-writes/).
    - [Troubleshoot issues writing data]({{% INFLUXDB_DOCS_URL %}}/write-data/troubleshoot/)
  requestBody:
    description: Data in line protocol format.
    required: true
    content:
      text/plain:
        schema:
          type: string
          format: byte
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - in: header
      name: Content-Encoding
      description: |
        The value tells InfluxDB what compression is applied to the line protocol in the request payload.
        To make an API request with a GZIP payload, send `Content-Encoding: gzip` as a request header.
      schema:
        type: string
        description: Content coding. Use `gzip` for compressed data or `identity` for unmodified, uncompressed data.
        default: identity
        enum:
          - gzip
          - identity
    - in: header
      name: Content-Type
      description: |
        Format of the data in the request body.
        To make an API request with a line protocol payload, send `Content-Type: text/plain; charset=utf-8` as a request header.
      schema:
        type: string
        description: |
          `text/plain` is the content type for line protocol. `UTF-8` is the default character set.
        default: text/plain; charset=utf-8
        enum:
          - text/plain
          - text/plain; charset=utf-8
    - in: header
      name: Content-Length
      description: Size of the entity-body, in bytes, sent to the database. If the length is greater than the database's `max body` configuration option, the server responds with status code `413`.
      schema:
        type: integer
        description: The length in decimal number of octets.
    - in: header
      name: Accept
      description: >
        Content type that the client can understand. Writes only return a response body if they fail, e.g. due to a formatting problem or quota limit.

        #### InfluxDB Cloud
          - returns only `application/json` for format and limit errors.
          - returns only `text/html` for some quota limit errors.


        #### InfluxDB OSS
          - returns only `application/json` for format and limit errors.


        For more information about write errors, see how to [troubleshoot issues writing data]({{% INFLUXDB_DOCS_URL %}}/write-data/troubleshoot/).
      schema:
        type: string
        description: Error content type.
        default: application/json
        enum:
          - application/json
    - in: query
      name: org
      description: Destination organization for writes. The database writes all points in the batch to this organization. If you provide both `orgID` and `org` parameters, `org` takes precedence.
      required: true
      schema:
        type: string
        description: Organization name or ID.
    - in: query
      name: orgID
      description: ID of the destination organization for writes. If both `orgID` and `org` are specified, `org` takes precedence.
      schema:
        type: string
    - in: query
      name: bucket
      description: Destination bucket for writes.
      required: true
      schema:
        type: string
        description: All points within batch are written to this bucket.
    - in: query
      name: precision
      description: Precision for unix timestamps in the line protocol of the request payload.
      schema:
        $ref: "../../common/schemas/WritePrecision.yml"
  responses:
    "204":
      description: InfluxDB validated the request data format and accepted the data for writing to the bucket.
        Because data is written to InfluxDB asynchronously, data may not yet be written to a bucket.
        If some of your data didn’t write to the bucket, see [how to check for write errors]({{% INFLUXDB_DOCS_URL %}}/write-data/troubleshoot/).
    "400":
      description: Bad request. Line protocol data in the request is malformed. The response body contains the first malformed line in the data. InfluxDB rejected the batch and did not write any data.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/LineProtocolError.yml"
          examples:
            measurementSchemaFieldTypeConflict:
              summary: InfluxDB Cloud field type conflict thrown by an explicit bucket schema
              value: {
               "code": "invalid",
               "message": "partial write error (2 written): unable to parse 'air_sensor,service=S1,sensor=L1 temperature=\"90.5\",humidity=70.0 1632850122': schema: field type for field \"temperature\" not permitted by schema; got String but expected Float"
              }
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    "404":
      $ref: "../../common/responses/ResourceNotFoundError.yml"
    "413":
      description: >
        The request payload is too large.
        InfluxDB rejected the batch and did not write any data.

        #### InfluxDB Cloud:
          - returns this error if the request exceeds the maximum [global limit]({{% INFLUXDB_DOCS_URL %}}/account-management/limits/#global-limits).
          - returns `Content-Type: text/html` for this error.

        #### InfluxDB OSS:
          - returns this error only if the [Go (golang) `ioutil.ReadAll()`](https://pkg.go.dev/io/ioutil#ReadAll) function raises an error.
          - returns `Content-Type: application/json` for this error.
      content:
        # application/json must be listed first for the influx-cli codegen to work properly, see https://github.com/influxdata/openapi/pull/253
        application/json:
          schema:
            $ref: "../../common/schemas/LineProtocolLengthError.yml"
          examples:
            dataExceedsSizeLimitOSS:
              summary: InfluxDB OSS response
              value: |
                {"code":"request too large","message":"unable to read data: points batch is too large"}
        text/html:
          schema:
            type: string
          examples:
            dataExceedsSizeLimit:
              summary: InfluxDB Cloud response
              value: |
                <html>
                  <head><title>413 Request Entity Too Large</title></head>
                  <body>
                    <center><h1>413 Request Entity Too Large</h1></center>
                    <hr>
                    <center>nginx</center>
                  </body>
                </html>
    "429":
      description: >
        #### InfluxDB Cloud:
          - returns this error if a **read** or **write** request exceeds your
            plan's [adjustable service quotas]({{% INFLUXDB_DOCS_URL %}}/account-management/limits/#adjustable-service-quotas)
            or if a **delete** request exceeds the maximum
            [global limit]({{% INFLUXDB_DOCS_URL %}}/account-management/limits/#global-limits).
          - returns `Retry-After` header that describes when to try the write again.

        #### InfluxDB OSS:
          - doesn't return this error.
      headers:
        Retry-After:
          description: Non-negative decimal integer indicating seconds to wait before retrying the request.
          schema:
            type: integer
            format: int32
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
    "503":
      description: >
        #### InfluxDB Cloud:
          - returns this error if series cardinality exceeds your plan's
            [adjustable service quotas]({{% INFLUXDB_DOCS_URL %}}/account-management/limits/#adjustable-service-quotas).
            See [how to resolve high series cardinality]({{% INFLUXDB_DOCS_URL %}}/write-data/best-practices/resolve-high-cardinality/).

        #### InfluxDB OSS:
          - returns this error if
            the server is temporarily unavailable to accept writes.
          - returns `Retry-After` header that describes when to try the write again.
      headers:
        Retry-After:
          description: Non-negative decimal integer indicating seconds to wait before retrying the request.
          schema:
            type: integer
            format: int32
    default:
      $ref: "../../common/responses/ServerError.yml"
