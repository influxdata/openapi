post:
  operationId: PostQueryAnalyze
  tags:
    - Query
  summary: Analyze a Flux query
  description: |
    Analyzes a [Flux query](https://docs.influxdata.com/flux/v0.x/) for syntax
    errors and returns the list of errors.

    In the following sample query, `from()` is missing the property key.

        ```json
        { "query": "from(: \"iot_center\")\
                    |> range(start: -90d)\
                    |> filter(fn: (r) => r._measurement == \"environment\")",
          "type": "flux"
        }
        ```

    If you pass this in a request to the `/api/v2/analyze` endpoint,
    InfluxDB returns an `errors` list that contains an error object for the missing key.

    #### Limitations

    -  The endpoint doesn't validate values in the query--for example:

      - The following sample query has correct syntax, but contains an incorrect `from()` property key:

        ```json
        { "query": "from(foo: \"iot_center\")\
                    |> range(start: -90d)\
                    |> filter(fn: (r) => r._measurement == \"environment\")",
          "type": "flux"
        }
        ```

        If you pass this in a request to the `/api/v2/analyze` endpoint,
        InfluxDB returns an empty `errors` list.

  parameters:
    - $ref: "../parameters/TraceSpan.yml"
    - in: header
      name: Content-Type
      schema:
        type: string
        enum:
          - application/json
  requestBody:
    description: Flux query to analyze
    content:
      application/json:
        schema:
          $ref: "../schemas/Query.yml"
  responses:
    "200":
      description: |
        Success.
        The response body contains the list of `errors`.
        If the query syntax is valid, the endpoint returns an empty `errors` list.
      content:
        application/json:
          schema:
            $ref: "../schemas/AnalyzeQueryResponse.yml"
          examples:
            missingQueryPropertyKey:
              summary: Missing property key error
              description: |
                Returns an error object if the Flux query is missing a property key.

                The following sample query is missing the _`bucket`_ property key:

                  ```json
                  {
                    "query": "from(: \"iot_center\")\

                    ...

                  }
                  ```
              value: {
                  "errors": [
                    {
                      "line": 1,
                      "column": 6,
                      "character": 0,
                      "message": "missing property key"
                    }
                  ]
                }
    "400":
      description: |
        Bad request.
        InfluxDB is unable to parse the request.
        The response body contains detail about the problem.
      headers:
        X-Platform-Error-Code:
          description: |
            The reason for the error.
          schema:
            type: string
            example: "invalid"
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yml"
          examples:
            invalidJSONStringValue:
              summary: Invalid JSON
              description: If the request body contains invalid JSON, returns `invalid` and problem detail.
              value: {
                  "code": "invalid",
                  "message": "invalid json: invalid character '\\'' looking for beginning of value"
                }
    default:
      description: Internal server error
      headers:
        X-Platform-Error-Code:
          description: The reason for the error.
          schema:
            type: string
            example: "internal error"
        X-Influx-Error:
          description: A string that describes the problem.
          schema:
            type: string
        X-Influx-Reference:
          description: The numeric reference code for the error type.
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yml"
          examples:
            emptyJSONObject:
              summary: Empty JSON object in request body
              description: |
                If the request body contains an empty JSON object, returns `internal error`.
              value: {
                  "code":"internal error",
                  "message":"An internal error has occurred - check server logs"
                }
  x-codeSamples:
    - lang: Shell
      label: "cURL: Analyze a Flux query"
      source: |
        curl -v --request POST \
          "http://localhost:8086/api/v2/query/analyze" \
          --header "Authorization: Token INFLUX_TOKEN" \
          --header 'Content-type: application/json' \
          --header 'Accept: application/json' \
          --data-binary @- << EOF
          { "query": "from(bucket: \"iot_center\")\
                      |> range(start: -90d)\
                      |> filter(fn: (r) => r._measurement == \"environment\")",
            "type": "flux"
          }
        EOF
