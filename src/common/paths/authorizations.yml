get:
  operationId: GetAuthorizations
  tags:
    - Authorizations (API tokens)
    - Security and access endpoints
  summary: List authorizations
  description: |
    Lists authorizations.

    To limit which authorizations are returned, pass query parameters in your request.
    If no query parameters are passed, InfluxDB returns all authorizations.

    #### InfluxDB Cloud

    - InfluxDB Cloud doesn't expose [API token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token)
      values in `GET /api/v2/authorizations` responses;
      returns `token: redacted` for all authorizations.

    #### Required permissions

    To retrieve an authorization, the request must use an API token that has the
    following permissions:

    - `read-authorizations`
    - `read-user` for the user that the authorization is scoped to

    #### Related guides

    - [View tokens]({{% INFLUXDB_DOCS_URL %}}/security/tokens/view-tokens/)
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - in: query
      name: userID
      schema:
        type: string
      description: |
        A user ID.
        Only returns authorizations scoped to the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).
    - in: query
      name: user
      schema:
        type: string
      description: |
        A user name.
        Only returns authorizations scoped to the specified [user]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#user).
    - in: query
      name: orgID
      schema:
        type: string
      description:
        An organization ID.
        Only returns authorizations that belong to the specified [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization).
    - in: query
      name: org
      schema:
        type: string
      description: |
        An organization name.
        Only returns authorizations that belong to the specified [organization]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#organization).
    - in: query
      name: token
      schema:
        type: string
      description: |
        An API [token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token) value.
        Specifies an authorization by its `token` property value
        and returns the authorization.

        #### InfluxDB OSS

        - Doesn't support this parameter. InfluxDB OSS ignores the `token=` parameter,
          applies other parameters, and then returns the result.

        #### Limitations

        - The parameter is non-repeatable. If you specify more than one,
          only the first one is used. If a resource with the specified
          property value doesn't exist, then the response body contains an empty list.
  responses:
    "200":
      description: |
        Success. The response body contains a list of authorizations.

        If the response body is missing authorizations that you expect, check that the API
        token used in the request has `read-user` permission for the users (`userID` property value)
        in those authorizations.

        #### InfluxDB OSS

        - **Warning**: The response body contains authorizations with their
          [API token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token) values in clear text.
        - If the request uses an  _[operator token](https://docs.influxdata.com/influxdb/latest/security/tokens/#operator-token)_,
          InfluxDB OSS returns authorizations for all organizations in the instance.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/Authorizations.yml"
    "400":
      description: Invalid request
      $ref: '../../common/responses/ServerError.yml'
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
    default:
      description: Unexpected error
      $ref: '../../common/responses/ServerError.yml'
post:
  operationId: PostAuthorizations
  tags:
    - Authorizations (API tokens)
    - Security and access endpoints
  summary: Create an authorization
  description: |
    Creates an authorization and returns the authorization with the
    generated API [token]({{% INFLUXDB_DOCS_URL %}}/reference/glossary/#token).

    Use this endpoint to create an authorization, which generates an API token
    with permissions to `read` or `write` to a specific resource or `type` of resource.
    The API token is the authorization's `token` property value.

    To follow best practices for secure API token generation and retrieval,
    InfluxDB enforces access restrictions on API tokens.

      - InfluxDB allows access to the API token value immediately after the authorization is created.
      - You can’t change access (read/write) permissions for an API token after it’s created.
      - Tokens stop working when the user who created the token is deleted.

    We recommend the following for managing your tokens:

      - Create a generic user to create and manage tokens for writing data.
      - Store your tokens in a secure password vault for future access.

    #### Required permissions

    - `write-authorizations`
    - `write-user` for the user that the authorization is scoped to

    #### Related guides

    - [Create a token]({{% INFLUXDB_DOCS_URL %}}/security/tokens/create-token/)
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
  requestBody:
    description: The authorization to create.
    required: true
    content:
      application/json:
        schema:
          $ref: "../../common/schemas/AuthorizationPostRequest.yml"
        examples:
          AuthorizationPostRequest:
            $ref: "../../common/requestBody/examples/AuthorizationRequestExamples.yml#/AuthorizationPostRequest"
          AuthorizationWithResourcePostRequest:
            $ref: "../../common/requestBody/examples/AuthorizationRequestExamples.yml#/AuthorizationWithResourcePostRequest"
          AuthorizationWithUserPostRequest:
            $ref: "../../common/requestBody/examples/AuthorizationRequestExamples.yml#/AuthorizationWithUserPostRequest"
  responses:
    "201":
      description: |
        Success. The authorization is created. The response body contains the
        authorization.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/Authorization.yml"
    "400":
      description: Invalid request
      $ref: '../../common/responses/ServerError.yml'
    "401":
      $ref: "../../common/responses/AuthorizationError.yml"
    "500":
      $ref: "../../common/responses/InternalServerError.yml"
    default:
      description: Unexpected error
      $ref: '../../common/responses/ServerError.yml'
