get:
  operationId: GetUsers
  tags:
    - Security and access endpoints
    - Users
  summary: List users
  description: |
    Retrieves a list of users. Default limit is `20`.

    To limit which users are returned, pass query parameters in your request.

    #### Required permissions

    - Requires an _[operator token]({{% INFLUXDB_DOCS_URL %}}/security/tokens/#operator-token))_ to list all users.
    - `read-user USER_ID` permission.
      `USER_ID` is the ID of the user that you want to retrieve.

  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
    - $ref: "../../common/parameters/Offset.yml"
    - $ref: "../../common/parameters/Limit.yml"
    - $ref: "../../common/parameters/After.yml"
    - in: query
      name: name
      schema:
        type: string
    - in: query
      name: id
      schema:
        type: string
  responses:
    "200":
      description: Success. The response contains a list of `users`.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/Users.yml"
    "401":
      description: |
        Unauthorized.
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yml"
    "422":
      description: |
        Unprocessable entity.

        The error may indicate one of the following problems:

        - The request body isn't valid--the request is well-formed, but InfluxDB can't process it due to semantic errors.
        - You passed a parameter combination that InfluxDB doesn't support.
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yml"
    "500":
      $ref: "../responses/InternalServerError.yml"
    default:
      description: Unexpected error
      $ref: '../../common/responses/ServerError.yml'
post:
  operationId: PostUsers
  tags:
    - Users
  summary: Create a user
  description: |
    Creates a user and returns the newly created user.

    #### Required permissions

    - `write-users`. Requires an InfluxDB API **Op** token.
  parameters:
    - $ref: "../../common/parameters/TraceSpan.yml"
  requestBody:
    description: The user to create.
    required: true
    content:
      application/json:
        schema:
          $ref: "../../common/schemas/User.yml"
  responses:
    "201":
      description: |
        Success.
        The response contains the newly created user.
      content:
        application/json:
          schema:
            $ref: "../../common/schemas/UserResponse.yml"
    "401":
      description: |
        Unauthorized.
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yml"
          examples:
            tokenNotAuthorized:
              summary: API token doesn't have `write:users` permission
              value:
                {
                  "code": "unauthorized",
                  "message": "write:users/09d8462ce0764000 is unauthorized"
              }
    "422":
      description: |
        Unprocessable entity.

        The error may indicate one of the following problems:

        - The request body isn't valid--the request is well-formed, but InfluxDB can't process it due to semantic errors.
        - You passed a parameter combination that InfluxDB doesn't support.
      content:
        application/json:
          schema:
            $ref: "../schemas/Error.yml"
    "500":
      $ref: "../responses/InternalServerError.yml"
    default:
      description: Unexpected error
      $ref: '../../common/responses/ServerError.yml'
  x-codeSamples:
    - label: "cURL: create a user and set a password"
      lang: Shell
      source: |
        # Create the user and assign the user ID to a variable.
        USER_ID=$(curl --request POST \
                "http://localhost:8086/api/v2/users/" \
                --header "Authorization: Token INFLUX_OP_TOKEN" \
                --header 'Content-type: application/json' \
                --data-binary @- << EOF | jq -r '.id'
                {
                  "name": "USER_NAME",
                  "status": "active"
                }
        EOF
        )

        # Pass the user ID and a password to set the password for the user.
        curl request POST "http://localhost:8086/api/v2/users/$USER_ID/password/" \
          --header "Authorization: Token INFLUX_OP_TOKEN" \
          --header 'Content-type: application/json' \
          --data '{ "password": "USER_PASSWORD" }'

