openapi: 3.0.0
info:
  title: QuartzPublicAPI
  version: 0.1.0
servers:
  - url: /api/v2
security:
  - bearerAuth: []
paths:
  /orgs:
    get:
      operationId: GetOrgs
      tags:
        - Organizations
      summary: Get all organizations
      responses:
        '200':
          description: List of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizations'
        '401':
          description: Unauthorized bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      operationId: PostOrgs
      tags:
        - Organizations
      summary: Creates an organization
      requestBody:
        description: Information for provisioning an organization
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
      responses:
        '201':
          description: Organization created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationWithToken'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Organization name taken
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/orgs/{orgID}':
    get:
      operationId: GetOrgsID
      tags:
        - Organizations
      summary: Get a single organization
      parameters:
        - in: path
          name: orgID
          schema:
            type: string
          required: true
          description: The ID of the organization
      responses:
        '200':
          description: The found organization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: DeleteOrgsID
      tags:
        - Organizations
      summary: Delete a single organization
      parameters:
        - in: path
          name: orgID
          schema:
            type: string
          required: true
          description: The ID of the organization
      responses:
        '204':
          description: The organization was deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/orgs/{orgID}/limits':
    get:
      operationId: GetOrgsIDLimits
      tags:
        - Limits
      summary: Get the limits of an organization
      parameters:
        - in: path
          name: orgID
          schema:
            type: string
          required: true
          description: The ID of the organization
      responses:
        '200':
          description: Organization limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgLimits'
        '401':
          description: Unauthorized bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: PatchOrgsIDLimits
      tags:
        - Limits
      summary: Update the limits of an organization
      parameters:
        - in: path
          name: orgID
          schema:
            type: string
          required: true
          description: The ID of the organization
      requestBody:
        description: Updated limits for an organization
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgLimits'
      responses:
        '200':
          description: Organization limits
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgLimits'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized bearer token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    BucketLimits:
      description: Bucket limits
      type: object
      properties:
        maxBuckets:
          example: 2
          description: Number of buckets allowed
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - $ref: '#/components/schemas/Unlimited'
            - type: integer
          minimum: 1
        maxRetentionDuration:
          description: Retention duration limits in nanoseconds
          example: 2592000000000000
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - $ref: '#/components/schemas/Unlimited'
            - type: integer
          minimum: 1
    CheckLimits:
      description: Check limits
      type: object
      properties:
        maxChecks:
          description: Number of checks allowed
          example: 2
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - $ref: '#/components/schemas/Unlimited'
            - type: integer
          minimum: 1
    DashboardLimits:
      description: Dashboard limits
      type: object
      properties:
        maxDashboards:
          description: Number of dashboards allowed
          example: 5
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - $ref: '#/components/schemas/Unlimited'
            - type: integer
    Error:
      properties:
        code:
          description: code is the machine-readable error code.
          readOnly: true
          type: string
          enum:
            - internal error
            - not found
            - conflict
            - invalid
            - unprocessable entity
            - empty value
            - unavailable
            - forbidden
            - too many requests
            - unauthorized
            - method not allowed
            - request too large
        message:
          readOnly: true
          description: message is a human-readable message.
          type: string
        op:
          readOnly: true
          description: op describes the logical code operation during error. Useful for debugging.
          type: string
        err:
          readOnly: true
          description: err is a stack of errors that occurred during processing of the request. Useful for debugging.
          type: string
      required:
        - code
        - message
    NotificationEndpointLimits:
      description: Notification endpoint limits
      type: object
      properties:
        blockedNotificationEndpoints:
          description: Notification endpoints not allowed CSV
          example: 'http,pagerduty'
          type: string
    NotificationRuleLimits:
      description: Notification rule limits
      type: object
      properties:
        maxNotifications:
          description: Number of notifications allowed
          example: 2
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - $ref: '#/components/schemas/Unlimited'
            - type: integer
          minimum: 1
        blockedNotificationRules:
          description: Notification rules not allowed CSV
          example: 'http,pagerduty'
          type: string
    OrganizationRequest:
      type: object
      properties:
        orgName:
          description: name of the organization
          type: string
        provider:
          description: name of the cloud provider
          type: string
          enum:
            - AWS
            - GCP
            - Azure
        region:
          description: name of the region within the cloud provider
          type: string
        rateLimits:
          $ref: '#/components/schemas/OrgLimits'
    OrganizationWithToken:
      allOf:
        - $ref: '#/components/schemas/Organization'
        - type: object
          properties:
            token:
              description: Authentication token to manage the organization and its resources in IDPE
              readOnly: true
              type: string
            links:
              description: Links to the idpe resources for this organization
              readOnly: true
              type: object
              example:
                resource: path/to/resource
    Organization:
      type: object
      properties:
        id:
          description: the IDPE organization ID
          readOnly: true
          type: string
        apiUrl:
          description: URL for talking to a specific cluster
          readOnly: true
          type: string
        region:
          description: name of the region within the cloud provider
          type: string
        provider:
          description: name of the cloud provider
          type: string
          enum:
            - AWS
            - GCP
            - Azure
    Organizations:
      type: array
      items:
        $ref: '#/components/schemas/Organization'
    OrgLimits:
      type: object
      properties:
        orgID:
          type: string
          readOnly: true
          description: ID of the org for which these rates apply
        rate:
          $ref: '#/components/schemas/RateLimits'
        bucket:
          $ref: '#/components/schemas/BucketLimits'
        task:
          $ref: '#/components/schemas/TaskLimits'
        dashboard:
          $ref: '#/components/schemas/DashboardLimits'
        check:
          $ref: '#/components/schemas/CheckLimits'
        notificationRule:
          $ref: '#/components/schemas/NotificationRuleLimits'
        notificationEndpoint:
          $ref: '#/components/schemas/NotificationEndpointLimits'
    RateLimits:
      description: Usage rate limits
      type: object
      properties:
        readKBs:
          description: KB of data query'd per second
          example: 1000
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - type: integer
              minimum: 1
              maximum: 10000
        writeKBs:
          description: KB of data written per second
          example: 17
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - type: integer
              minimum: 1
              maximum: 10000
        cardinality:
          description: Max cardinality of data
          example: 10000
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - type: integer
              minimum: 1
              maximum: 1000000
    RestrictedLimit:
      description: Restrict access entirely
      type: integer
      enum:
        - -1
    TaskLimits:
      description: Task limits
      type: object
      properties:
        maxTasks:
          description: Number of tasks allowed
          example: 5
          oneOf:
            - $ref: '#/components/schemas/RestrictedLimit'
            - $ref: '#/components/schemas/Unlimited'
            - type: integer
          minimum: 1
    Unlimited:
      description: Unbounded limit
      type: integer
      enum:
        - 0
