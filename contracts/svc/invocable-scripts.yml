openapi: 3.0.0
info:
  title: InfluxData Invokable Scripts API
  version: 0.1.0
  description: |
    Manage and execute scripts as API endpoints in InfluxDB.

    An API Invokable Script assigns your custom Flux script to a new InfluxDB API endpoint for your organization.
    Invokable scripts let you execute your script as an HTTP request to the endpoint.

    Invokable scripts accept parameters. Add parameter references in your script as `params.myparameter`.
    When you `invoke` your script, you send parameters as key-value pairs in the `params` object.
    InfluxDB executes your script with the key-value pairs as arguments and returns the result.

    For more information and examples, see [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/).
servers:
  - url: /
paths:
  /scripts:
    get:
      operationId: GetScripts
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: List scripts
      parameters:
        - in: query
          name: limit
          description: The number of scripts to return.
          required: false
          schema:
            type: integer
        - in: query
          name: offset
          required: false
          description: The offset for pagination.
          schema:
            type: integer
      responses:
        '200':
          description: The list of scripts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scripts'
        default:
          description: Unexpected error
          $ref: '#/components/responses/ServerError'
    post:
      operationId: PostScripts
      tags:
        - Invokable Scripts
      summary: Create a script
      requestBody:
        description: The script to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCreateRequest'
      responses:
        '201':
          description: The created script.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
        default:
          description: Unexpected error
          $ref: '#/components/responses/ServerError'
  '/scripts/{scriptID}':
    get:
      operationId: GetScriptsID
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: Retrieve a script
      description: |
        Retrieve an invokable script by its ID.

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
          description: |
            Script ID.
            Only return a script with this ID.
      responses:
        '200':
          description: |
            Success.
            The response body contains the requested script object.
          content:
            application/json:
              schema:
                properties:
                  id:
                    readOnly: true
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  orgID:
                    type: string
                  script:
                    description: script to be executed
                    type: string
                  language:
                    $ref: '#/components/schemas/ScriptLanguage'
                  createdAt:
                    type: string
                    format: date-time
                    readOnly: true
                  updatedAt:
                    type: string
                    format: date-time
                    readOnly: true
              examples:
                successResponse:
                  value:
                    id: 09afa3b220fe4000
                    orgID: bea7ea952287f70d
                    name: getLastPoint
                    script: 'from(bucket: my-bucket) |> range(start: -7d) |> limit(n:1)'
                    description: getLastPoint finds the last point in a bucket
                    language: flux
                    createdAt: '2022-07-17T23:49:45.731237Z'
                    updatedAt: '2022-07-17T23:49:45.731237Z'
        '404':
          description: |
            Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  summary: |
                    The requested script was not found.
                  value:
                    code: not found
                    message: script "09afa3b220fe400" not found
        default:
          description: Internal server error.
          $ref: '#/components/responses/ServerError'
    patch:
      operationId: PatchScriptsID
      tags:
        - Invokable Scripts
      summary: Update a script
      description: |
        Updates an invokable script.

        Use this endpoint to update the properties (`description`, and `script`)
        of an invokable script.

        To update a script, pass an object that contains the updated key-value pairs.

        #### Limitations

        - Sending an empty request body returns an HTTP `200` status code.

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      requestBody:
        description: |
          An object that contains the updated task properties to apply.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptUpdateRequest'
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
          description: |
            Script ID.
            Only returns scripts with this ID.
      responses:
        '200':
          description: |
            Success.
            The response body contains the updated script.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1scripts~1%7BscriptID%7D/get/responses/200/content/application~1json/schema'
              examples:
                successResponse:
                  value:
                    id: 09afa3b220fe4000
                    orgID: bea7ea952287f70d
                    name: getLastPoint
                    script: 'from(bucket: newBucket) |> range(start: -7d) |> limit(n:1)'
                    description: get last point from new bucket
                    language: flux
                    createdAt: '2022-07-17T23:49:45.731237Z'
                    updatedAt: '2022-07-19T22:27:23.185436Z'
        '404':
          description: |
            Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  summary: |
                    The requested script was not found.
                  value:
                    code: not found
                    message: script "09afa3b220fe400" not found
        default:
          description: Internal server error
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl -X 'PATCH' \
              "https://cloud2.influxdata.com/api/v2/scripts/SCRIPT_ID" \
              --header "Authorization: Token INFLUX_TOKEN" \
              --header "Accept: application/json"
              --header "Content-Type: application/json"
              --data '{
                  "description": "get last point from new bucket",
                  "script": "from(bucket: updatedBucket) |> range(start: -7d) |> limit(n:1)", "language": "flux"
                }'
    delete:
      operationId: DeleteScriptsID
      tags:
        - Invokable Scripts
      summary: Delete a script
      description: |
        Deletes an invokable script and all associated records.

        #### Limitations

        - Only one script can be deleted per request.
        - `scriptIDs` that do not exist return an HTTP `204` status code.

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
          description: |
            Script ID.
            Only deletes scripts with this ID.
      responses:
        '204':
          description: |
            No content.
            The script is deleted.
        default:
          description: Unexpected error
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl -X 'DELETE' \
              "https://cloud2.influxdata.com/api/v2/scripts/SCRIPT_ID" \
              --header "Authorization: Token INFLUX_TOKEN" \
              --header 'Accept: application/json'
  '/scripts/{scriptID}/invoke':
    post:
      operationId: PostScriptsIDInvoke
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: Invoke a script
      description: Invokes a script and substitutes `params` keys referenced in the script with `params` key-values sent in the request body.
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptInvocationParams'
      responses:
        '200':
          description: The result of the script execution.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScriptHTTPResponseData'
        default:
          description: Unexpected error
          $ref: '#/components/responses/ServerError'
components:
  responses:
    ServerError:
      description: Non 2XX error response from server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      properties:
        code:
          description: code is the machine-readable error code.
          readOnly: true
          type: string
          enum:
            - internal error
            - not found
            - conflict
            - invalid
            - unprocessable entity
            - empty value
            - unavailable
            - forbidden
            - too many requests
            - unauthorized
            - method not allowed
            - request too large
            - unsupported media type
        message:
          readOnly: true
          description: Human-readable message.
          type: string
        op:
          readOnly: true
          description: Describes the logical code operation when the error occurred. Useful for debugging.
          type: string
        err:
          readOnly: true
          description: Stack of errors that occurred during processing of the request. Useful for debugging.
          type: string
      required:
        - code
    Script:
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        orgID:
          type: string
        script:
          description: script to be executed
          type: string
        language:
          $ref: '#/components/schemas/ScriptLanguage'
        url:
          type: string
          description: invocation endpoint address
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - name
        - orgID
        - script
    Scripts:
      type: object
      properties:
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/Script'
    ScriptCreateRequest:
      type: object
      properties:
        name:
          description: The name of the script. The name must be unique within the organization.
          type: string
        description:
          type: string
        script:
          description: The script to execute.
          type: string
        language:
          $ref: '#/components/schemas/ScriptLanguage'
      required:
        - name
        - script
        - language
        - description
    ScriptUpdateRequest:
      type: object
      properties:
        description:
          description: Script description. A description of the script.
          type: string
        script:
          description: The script to execute.
          type: string
    ScriptHTTPResponseData:
      description: The data sent in the response body when a script is invoked by an HTTP request. User defined and dynamic.
      type: string
      format: binary
    ScriptInvocationParams:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
    ScriptLanguage:
      type: string
      enum:
        - flux
