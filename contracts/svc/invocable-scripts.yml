openapi: 3.0.0
info:
  title: InfluxData Invokable Scripts API
  version: 0.1.0
  description: |
    Manage and execute scripts as API endpoints in InfluxDB.

    An API Invokable Script assigns your custom Flux script to a new InfluxDB API endpoint for your organization.
    Invokable scripts let you execute your script as an HTTP request to the endpoint.

    Invokable scripts accept parameters. Add parameter references in your script as `params.myparameter`.
    When you `invoke` your script, you send parameters as key-value pairs in the `params` object.
    InfluxDB executes your script with the key-value pairs as arguments and returns the result.

    For more information and examples, see [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/).
servers:
  - url: /
paths:
  /scripts:
    get:
      operationId: GetScripts
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: List scripts
      description: |
        Retrieves a list of [scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/).

        #### Limitations

        - Paging with an `offset` greater than the number of records will result in
        an empty response--for example:

          The following request is paging to the 50th record, but the user has only
          created two scripts.

            ```sh
            $ curl --request GET "INFLUX_URL/api/v2/scripts?limit=1&offset=50"

            $ {"scripts":[]}
            ```

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      parameters:
        - in: query
          name: limit
          description: |
            Limits the number of scripts returned. Default is `100`.
          required: false
          schema:
            type: integer
            minimum: 0
            maximum: 500
            default: 100
        - in: query
          name: offset
          required: false
          description: |
            The offset for pagination.
            The number of records to skip.
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: |
            Success.
            The response body contains the list of scripts.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scripts'
              examples:
                successResponse:
                  value:
                    scripts:
                      - id: 09afa3b220fe4000
                        orgID: bea7ea952287f70d
                        name: getLastPointFromSampleBucket
                        script: 'from(bucket: SampleBucket) |> range(start: -7d) |> limit(n:1)'
                        description: find the last point from Sample Bucket
                        language: flux
                        createdAt: '2022-07-17T23:49:45.731237Z'
                        updatedAt: '2022-07-17T23:49:45.731237Z'
                      - id: 09afa23ff13e4000
                        orgID: bea7ea952287f70d
                        name: getLastPoint
                        script: 'from(bucket: params.mybucket) |> range(start: -7d) |> limit(n:1)'
                        description: getLastPoint finds the last point in a bucket
                        language: flux
                        createdAt: '2022-07-17T23:43:26.660308Z'
                        updatedAt: '2022-07-17T23:43:26.660308Z'
        '400':
          description: |
            Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidSyntaxError:
                  summary: Query parameter contains invalid syntax.
                  value:
                    code: 3
                    message: 'parsing field "limit": strconv.ParseUint: parsing "-1": invalid syntax'
                    details: []
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl --request GET "https://cloud2.influxdata.com/api/v2/scripts?limit=100&offset=0" \
              --header "Authorization: Token INFLUX_API_TOKEN" \
              --header "Accept: application/json" \
              --header "Content-Type: application/json"
    post:
      operationId: PostScripts
      tags:
        - Invokable Scripts
      summary: Create a script
      description: |
        Creates an [invokable script](https://docs.influxdata.com/resources/videos/api-invokable-scripts/)
        and returns the created script.

        #### Related Guides

        - [Invokable scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/).
        - [Creating custom InfluxDB endpoints](https://docs.influxdata.com/resources/videos/api-invokable-scripts/).
      requestBody:
        description: The script to create.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptCreateRequest'
      responses:
        '201':
          description: |
            Success.
            The response body contains the script and its metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
              examples:
                successResponse:
                  value:
                    id: 09afa23ff13e4000
                    orgID: bea7ea952287f70d
                    name: getLastPoint
                    script: 'from(bucket: params.mybucket) |> range(start: -7d) |> limit(n:1)'
                    description: getLastPoint finds the last point in a bucket
                    language: flux
                    createdAt: '2022-07-17T23:43:26.660308Z'
                    updatedAt: '2022-07-17T23:43:26.660308Z'
        '400':
          description: |
            Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidJSONStringValue:
                  summary: Invalid JSON
                  description: |
                    If the request body contains invalid JSON, returns `invalid`
                    with detail about the problem.
                  value:
                    code: invalid
                    message: 'invalid json: invalid character ''\'''' looking for beginning of value'
                invalidCharacterValue:
                  summary: Invalid character
                  description: |
                    If the request body contains an invalid character, returns
                    `invalid` with detail about the problem.
                  value:
                    code: invalid
                    message: 'invalid character '','' looking for beginning of value'
                    details: []
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '422':
          description: |
            Unprocessable entity.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                uniquenessError:
                  description: |
                    A script with the same `name` exists.
                  value:
                    code: conflict
                    message: uniqueness violation
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl --request POST "https://cloud2.influxdata.com/api/v2/scripts" \
              --header "Authorization: Token INFLUX_API_TOKEN" \
              --header "Accept: application/json" \
              --header "Content-Type: application/json" \
              --data '{
                  "name": "getLastPoint",
                  "description": "getLastPoint finds the last point in a bucket",
                  "orgID": "INFLUX_ORG_ID",
                  "script": "from(bucket: INFLUX_BUCKET) |> range(start: -7d) |> limit(n:1)",
                  "language": "flux"
                }'
  '/scripts/{scriptID}':
    get:
      operationId: GetScriptsID
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: Retrieve a script
      description: |
        Retrieves an invokable script.

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
          description: |
            The ID of the script to retrieve.
      responses:
        '200':
          description: |
            Success.
            The response body contains the script object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
              examples:
                successResponse:
                  value:
                    id: 09afa3b220fe4000
                    orgID: bea7ea952287f70d
                    name: getLastPoint
                    script: 'from(bucket: my-bucket) |> range(start: -7d) |> limit(n:1)'
                    description: getLastPoint finds the last point in a bucket
                    language: flux
                    createdAt: '2022-07-17T23:49:45.731237Z'
                    updatedAt: '2022-07-17T23:49:45.731237Z'
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: |
            Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  summary: |
                    The requested script was not found.
                  value:
                    code: not found
                    message: script "09afa3b220fe400" not found
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Internal server error.
          $ref: '#/components/responses/ServerError'
    patch:
      operationId: PatchScriptsID
      tags:
        - Invokable Scripts
      summary: Update a script
      description: |
        Updates an invokable script.

        Use this endpoint to modify values for script properties (`description` and `script`).

        To update a script, pass an object that contains the updated key-value pairs.

        #### Limitations

        - If you send an empty request body, the script will neither update nor
        store an empty script, but InfluxDB will respond with an HTTP `200` status
        code.

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      requestBody:
        description: |
          An object that contains the updated script properties to apply.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptUpdateRequest'
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
          description: |
            Script ID.
            The ID of the script to update.
      responses:
        '200':
          description: |
            Success.
            The response body contains the updated script.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Script'
              examples:
                successResponse:
                  value:
                    id: 09afa3b220fe4000
                    orgID: bea7ea952287f70d
                    name: getLastPoint
                    script: 'from(bucket: newBucket) |> range(start: -7d) |> limit(n:1)'
                    description: get last point from new bucket
                    language: flux
                    createdAt: '2022-07-17T23:49:45.731237Z'
                    updatedAt: '2022-07-19T22:27:23.185436Z'
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: |
            Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                notFound:
                  summary: |
                    The requested script wasn't found.
                  value:
                    code: not found
                    message: script "09afa3b220fe400" not found
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Internal server error
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl -X 'PATCH' \
              "https://cloud2.influxdata.com/api/v2/scripts/SCRIPT_ID" \
              --header "Authorization: Token INFLUX_TOKEN" \
              --header "Accept: application/json"
              --header "Content-Type: application/json"
              --data '{
                  "description": "get last point from new bucket",
                  "script": "from(bucket: updatedBucket) |> range(start: -7d) |> limit(n:1)", "language": "flux"
                }'
    delete:
      operationId: DeleteScriptsID
      tags:
        - Invokable Scripts
      summary: Delete a script
      description: |
        Deletes an invokable script and all associated records.

        #### Limitations

        - You can delete only one script per request.
        - If the script ID you provide doesn't exist for the organization, InfluxDB
        responds with an HTTP `204` status code.

        #### Related Guides

        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      parameters:
        - in: path
          name: scriptID
          schema:
            type: string
          required: true
          description: |
            The ID of the script to delete.
      responses:
        '204':
          description: |
            Success.
            The script is queued for deletion.
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error
          $ref: '#/components/responses/ServerError'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl -X 'DELETE' \
              "https://cloud2.influxdata.com/api/v2/scripts/SCRIPT_ID" \
              --header "Authorization: Token INFLUX_TOKEN" \
              --header 'Accept: application/json'
  '/scripts/{scriptID}/invoke':
    post:
      operationId: PostScriptsIDInvoke
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: Invoke a script
      description: |
        Invokes a script and substitutes `params` keys referenced in the script with
        `params` key-values sent in the request body--for example:

        The following script contains the parameter _`mybucket`_:

        ```json
        "script": "from(bucket: params.mybucket)
                    |> range(start: -7d)
                    |> limit(n:1)"
        ```
        The following example `POST /api/v2/scripts/SCRIPT_ID/invoke` request body
        passes a value for _`mybucket`_:

        ```json
        {
          "params": {
            "mybucket": "air_sensor"
          }
        }
        ```

        #### Related Guides
        - [Invoke custom scripts](https://docs.influxdata.com/influxdb/cloud/api-guide/api-invokable-scripts/)
      parameters:
        - in: path
          name: scriptID
          description: |
            Script ID.
            Only returns scripts with this ID.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptInvocationParams'
      responses:
        '200':
          description: |
            Success.
            The response body contains the result of the script execution.
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/ScriptHTTPResponseData'
              examples:
                successResponse:
                  value: |
                    ,result,table,_start,_stop,_time,_value,_field,_measurement,host
                    ,_result,0,2019-10-30T01:28:02.52716421Z,2022-07-26T01:28:02.52716421Z,2020-01-01T00:00:00Z,72.01,used_percent,mem,host2
        '400':
          description: |
            Bad request.
          headers:
            X-Platform-Error-Code:
              description: |
                The reason for the error.
              schema:
                type: string
                example: invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                invalidParameters:
                  summary: The parameters passed to the script are invalid.
                  value:
                    code: invalid
                    message: invalid parameters provided
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '404':
          description: |
            Not found.
          headers:
            X-Platform-Error-Code:
              description: |
                The reason for the error.
              schema:
                type: string
                example: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                scriptNotFound:
                  summary: |
                    The requested script was not found.
                  value:
                    code: not found
                    message: script "09afa3b220fe400" not found
                bucketNotFound:
                  summary: |
                    The requested bucket was not found.
                  value:
                    code: not found
                    message: 'failed to initialize execute state: could not find bucket "test-bucket"'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codeSamples:
        - lang: Shell
          label: cURL
          source: |
            curl --request POST "https://cloud2.influxdata.com/api/v2/scripts/SCRIPT_ID/invoke" \
                      --header "Authorization: Token INFLUX_TOKEN" \
                      --header 'Accept: application/csv' \
                      --header 'Content-Type: application/json' \
                      --data '{
                        "params": {
                            "mybucket": "air_sensor"
                            }
                        }'
components:
  responses:
    ServerError:
      description: Non 2XX error response from server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    AuthorizationError:
      description: |
        Unauthorized. The error may indicate one of the following:

          * The `Authorization: Token` header is missing or malformed.
          * The API token value is missing from the header.
          * The token does not have sufficient permissions to write to this organization and bucket.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            tokenNotAuthorized:
              summary: Token is not authorized to access a resource
              value:
                code: unauthorized
                message: unauthorized access
    InternalServerError:
      description: |
        Internal server error.
        The server encountered an unexpected situation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      properties:
        code:
          description: code is the machine-readable error code.
          readOnly: true
          type: string
          enum:
            - internal error
            - not found
            - conflict
            - invalid
            - unprocessable entity
            - empty value
            - unavailable
            - forbidden
            - too many requests
            - unauthorized
            - method not allowed
            - request too large
            - unsupported media type
        message:
          readOnly: true
          description: Human-readable message.
          type: string
        op:
          readOnly: true
          description: Describes the logical code operation when the error occurred. Useful for debugging.
          type: string
        err:
          readOnly: true
          description: Stack of errors that occurred during processing of the request. Useful for debugging.
          type: string
      required:
        - code
    Script:
      properties:
        id:
          readOnly: true
          type: string
        name:
          type: string
        description:
          type: string
        orgID:
          type: string
        script:
          description: script to be executed
          type: string
        language:
          $ref: '#/components/schemas/ScriptLanguage'
        url:
          type: string
          description: invocation endpoint address
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
      required:
        - name
        - orgID
        - script
    Scripts:
      type: object
      properties:
        scripts:
          type: array
          items:
            $ref: '#/components/schemas/Script'
    ScriptCreateRequest:
      type: object
      properties:
        name:
          description: Script name. The name must be unique within the organization.
          type: string
        description:
          description: Script description. A description of the script.
          type: string
        script:
          description: The script to execute.
          type: string
        language:
          $ref: '#/components/schemas/ScriptLanguage'
      required:
        - name
        - script
        - language
        - description
    ScriptUpdateRequest:
      type: object
      properties:
        description:
          description: A description of the script.
          type: string
        script:
          description: The script to execute.
          type: string
    ScriptHTTPResponseData:
      description: |
        The response body contains the results of the executed script.
        The response is user-defined and dynamic.
      type: string
      format: binary
    ScriptInvocationParams:
      type: object
      properties:
        params:
          type: object
          additionalProperties: true
          description: |
            The script parameters.
            `params` contains key-value pairs that map values to the **params.keys**
            in a script.
            When you invoke a script with `params`, InfluxDB passes the values as
            invocation parameters to the script.
    ScriptLanguage:
      type: string
      enum:
        - flux
