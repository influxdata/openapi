openapi: 3.0.0
info:
  title: InfluxData Invokable Scripts Internal API
  version: 0.1.0
  description: |
    Internal API endpoints for Invokable Scripts.
    These operations can only be called internally from other services.
servers:
  - url: /
paths:
  /scripts/labels/update:
    patch:
      operationId: PatchScriptsBulkUpdateLabel
      tags:
        - Invokable Scripts
      summary: Update a label name in all scripts in the organization.
      description: |
        Updates a label name for all scripts in the organization.

        #### Limitations

        - This is a global operation that can only be called
        internally between services.

        #### Permissions

        - Requires global (not org-scoped) permissions for `labels` and `functions`.
      requestBody:
        description: |
          The label update to apply to all scripts in the organization.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptBulkUpdateLabelRequest'
      responses:
        '204':
          description: |
            Success.
            The label name is updated for all scripts owned by the organization.
        '400':
          description: |
            Bad request.
            InfluxDB is unable to parse the request.
            The response body contains detail about the error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                orgProvidedNotFound:
                  summary: The org or orgID passed doesn't own the token passed in the header
                  description: |
                    For some endpoints, **InfluxDB OSS** may return this error if an incorrect value is passed for `org` or `orgID`.
                  value:
                    code: invalid
                    message: 'failed to decode request body: organization not found'
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error.
          $ref: '#/components/responses/ServerError'
  /scripts/labels/remove:
    patch:
      operationId: PatchScriptsBulkRemoveLabel
      tags:
        - Data I/O endpoints
        - Invokable Scripts
      summary: Remove a label from all scripts in the organization.
      description: |
        Removes a label from all scripts in the organization.

        #### Limitations

        - This is a global operation that can only be called
        internally between services.

        #### Permissions

        - Requires global (not org-scoped) permissions for `labels` and `functions`.
      requestBody:
        description: |
          The label to remove from all scripts in the organization.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScriptBulkRemoveLabelRequest'
      responses:
        '204':
          description: |
            Success.
            The label is removed from all scripts owned by the organization.
        '400':
          description: Bad request.
          $ref: '#/components/responses/ServerError'
        '401':
          $ref: '#/components/responses/AuthorizationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
        default:
          description: Unexpected error.
          $ref: '#/components/responses/ServerError'
components:
  responses:
    ServerError:
      description: Non 2XX error response from server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    AuthorizationError:
      description: |
        Unauthorized. The error may indicate one of the following:

          * The `Authorization: Token` header is missing or malformed.
          * The API token value is missing from the header.
          * The token doesn't have sufficient permissions to write to this organization and bucket.
      content:
        application/json:
          schema:
            properties:
              code:
                description: |
                  The HTTP status code description. Default is `unauthorized`.
                readOnly: true
                type: string
                enum:
                  - unauthorized
              message:
                readOnly: true
                description: A human-readable message that may contain detail about the error.
                type: string
          examples:
            tokenNotAuthorized:
              summary: Token is not authorized to access a resource
              value:
                code: unauthorized
                message: unauthorized access
    InternalServerError:
      description: |
        Internal server error.
        The server encountered an unexpected situation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      properties:
        code:
          description: code is the machine-readable error code.
          readOnly: true
          type: string
          enum:
            - internal error
            - not found
            - conflict
            - invalid
            - unprocessable entity
            - empty value
            - unavailable
            - forbidden
            - too many requests
            - unauthorized
            - method not allowed
            - request too large
            - unsupported media type
        message:
          readOnly: true
          description: Human-readable message.
          type: string
        op:
          readOnly: true
          description: Describes the logical code operation when the error occurred. Useful for debugging.
          type: string
        err:
          readOnly: true
          description: Stack of errors that occurred during processing of the request. Useful for debugging.
          type: string
      required:
        - code
    ScriptBulkUpdateLabelRequest:
      type: object
      properties:
        orgID:
          description: The ID of the organization that owns the scripts with the label.
          type: string
        oldLabelName:
          description: The old label name.
          type: string
        newLabelName:
          description: The new label name.
          type: string
    ScriptBulkRemoveLabelRequest:
      type: object
      properties:
        orgID:
          description: The ID of the organization that owns the scripts with the label.
          type: string
        label:
          description: A label name to remove.
          type: string
